workflow:
  name: Gitlab Workspace Proxy Pipeline

variables:
  TF_VAR_helm_chart_version: $HELM_CHART_VERSION
  TF_VAR_namespace: $NAMESPACE
  TF_VAR_client_id: $CLIENT_ID
  TF_VAR_client_secret: $CLIENT_SECRET
  TF_VAR_redirect_uri: $REDIRECT_URI
  TF_VAR_signing_key: $SIGNING_KEY
  TF_VAR_gitlab_url: $GITLAB_URL
  TF_VAR_workspace_domain_cert: $WORKSPACE_DOMAIN_CERT
  TF_VAR_workspace_domain_key: $WORKSPACE_DOMAIN_KEY
  TF_VAR_wildcard_domain_cert: $WILDCARD_DOMAIN_CERT
  TF_VAR_wildcard_domain_key: $WILDCARD_DOMAIN_KEY
  TF_VAR_ingress_class: $INGRESS_CLASS
  TF_VAR_gitlab_workspaces_proxy_domain: $GITLAB_WORKSPACE_PROXY_DOMAIN
  TF_VAR_gitlab_workspaces_wildcard_domain: $GITLAB_WORKSPACE_WILDCARD_DOMAIN
  TF_VAR_ssh_host_key: $SSH_HOST_KEY
  
.exporting_variables:
  before_script: |
    export $TF_VAR_helm_chart_version
    export $TF_VAR_namespace
    export TF_VAR_client_id         #Sensitive masked
    export TF_VAR_client_secret     #Sensitive masked
    export TF_VAR_redirect_uri      
    export TF_VAR_signing_key       #Sensitive masked
    export TF_VAR_gitlab_url
    export TF_VAR_workspace_domain_cert
    export TF_VAR_workspace_domain_key  #Sensitive masked
    export TF_VAR_wildcard_domain_cert  
    export TF_VAR_wildcard_domain_key   #Sensitive masked
    export TF_VAR_ingress_class
    export TF_VAR_gitlab_workspaces_proxy_domain
    export TF_VAR_gitlab_workspaces_wildcard_domain
    export TF_VAR_ssh_host_key      $Sensitive masked
    
stages:
  - init
  - plan
  - apply

# Stage to initialize Terraform
init:
  stage: init
  tags:
    - 
  extends: .exporting_variables
  script: | 
    cd terraform
    terraform init
  only:
    - main

# Stage to plan Terraform changes
plan:
  stage: plan
  tags:
    -
  needs:
    - init
  extends: .exporting_variables
  script: | 
    cd terraform
    terraform validate
    terraform plan -out=tfplan
  only:
    - merge_requests 
  artifacts:
    when: on_success
    expire_in: 3 days
    paths:
      - tfplan

# Stage to deploy  Terraofrom 
apply:
  stage: apply
  needs:
   - plan
  dependencies:
    - plan # Apply uses the tfplan artifact
  extends: .exporting_variables
  script:
    - cd terraform
    - terraform apply -auto-approve tfplan
  only:
    - main # Apply only on main branch
  when: manual # Ensure this is triggered manually
  allow_failure: true
  
